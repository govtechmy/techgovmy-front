/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    'product-asset': ProductAsset;
    'site-asset': SiteAsset;
    products: Product;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'product-asset': ProductAssetSelect<false> | ProductAssetSelect<true>;
    'site-asset': SiteAssetSelect<false> | SiteAssetSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    'site-info': SiteInfo;
    homepage: Homepage;
    'about-us': AboutUs;
    navbar: Navbar;
    footer: Footer;
  };
  globalsSelect: {
    'site-info': SiteInfoSelect<false> | SiteInfoSelect<true>;
    homepage: HomepageSelect<false> | HomepageSelect<true>;
    'about-us': AboutUsSelect<false> | AboutUsSelect<true>;
    navbar: NavbarSelect<false> | NavbarSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: 'ms-MY' | 'en-GB';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  description?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-asset".
 */
export interface ProductAsset {
  id: string;
  alt: string;
  description?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-asset".
 */
export interface SiteAsset {
  id: string;
  alt: string;
  description?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: string;
  logo: string | ProductAsset;
  name: string;
  slug: string;
  description: string;
  url?: string | null;
  project_start_date: string;
  type: 'websites' | 'module' | 'libraries' | 'standard' | 'applications';
  /**
   * To be used in product image carousel
   */
  images: {
    image?: (string | null) | ProductAsset;
    id?: string | null;
  }[];
  status?:
    | {
        isActive?: boolean | null;
        status: string;
        date?: string | null;
        /**
         * Used to determine whether the project is still 'under development' or 'completed'. Meaning the status can 'New', but since it is not yet started, it falls under index 0 which signifies that it is 'under development'
         */
        phase_index: '0' | '1';
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'product-asset';
        value: string | ProductAsset;
      } | null)
    | ({
        relationTo: 'site-asset';
        value: string | SiteAsset;
      } | null)
    | ({
        relationTo: 'products';
        value: string | Product;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-asset_select".
 */
export interface ProductAssetSelect<T extends boolean = true> {
  alt?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-asset_select".
 */
export interface SiteAssetSelect<T extends boolean = true> {
  alt?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  logo?: T;
  name?: T;
  slug?: T;
  description?: T;
  url?: T;
  project_start_date?: T;
  type?: T;
  images?:
    | T
    | {
        image?: T;
        id?: T;
      };
  status?:
    | T
    | {
        isActive?: T;
        status?: T;
        date?: T;
        phase_index?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-info".
 */
export interface SiteInfo {
  id: string;
  site_name: string;
  address: string;
  google_maps_url: string;
  waze_url: string;
  google_embed_url: string;
  email: string;
  phone: string;
  'social-media'?:
    | {
        icon?: ('facebook' | 'x' | 'linkedin' | 'instagram' | 'youtube') | null;
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: ('/' | '/about-us' | '/products' | '/contact-us' | '/disclaimer' | '/privacy-policy') | null;
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  /**
   * Label for Contact Page used for the labeling content
   */
  'contact-us': {
    title: string;
    office_name_label: string;
    inquiries_label: string;
  };
  /**
   * Label for Products Page used for the labeling content
   */
  products: {
    'hero-title': string;
    'hero-description': string;
    all_product: string;
    completed: string;
    under_dev: string;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage".
 */
export interface Homepage {
  id: string;
  'hero-title': string;
  'hero-typewriter-text': {
    text: string;
    id?: string | null;
  }[];
  'hero-description': string;
  'statistics-section': {
    headline: string;
    title: string;
    description: string;
  };
  'pages-section'?: {
    list?:
      | {
          image: string | SiteAsset;
          headline: string;
          title: string;
          description: string;
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ('null' | '/' | '/about-us' | '/products' | '/contact-us' | '/disclaimer' | '/privacy-policy')
              | null;
            url?: string | null;
            label: string;
          };
          id?: string | null;
        }[]
      | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about-us".
 */
export interface AboutUs {
  id: string;
  'intro-header'?: string | null;
  'intro-description'?: string | null;
  'future-header'?: string | null;
  'future-description'?:
    | {
        'line-text'?: string | null;
        id?: string | null;
      }[]
    | null;
  'our-capabilities-title'?: string | null;
  'our-capabilities'?:
    | {
        'card-header'?: string | null;
        icon?: ('database' | 'check-shield' | 'org-chart' | 'flag' | 'edit' | 'component') | null;
        'card-description'?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navbar".
 */
export interface Navbar {
  id: string;
  'navbar-items': {
    link: {
      type?: ('reference' | 'custom') | null;
      newTab?: boolean | null;
      reference?: ('/' | '/about-us' | '/products' | '/contact-us' | '/disclaimer' | '/privacy-policy') | null;
      url?: string | null;
      label: string;
    };
    id?: string | null;
  }[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  social_label: string;
  govtech_label: string;
  govtech_route?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: ('/' | '/about-us' | '/products' | '/contact-us' | '/disclaimer' | '/privacy-policy') | null;
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  opensource_label: string;
  open_source?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: ('/' | '/about-us' | '/products' | '/contact-us' | '/disclaimer' | '/privacy-policy') | null;
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  copyright?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-info_select".
 */
export interface SiteInfoSelect<T extends boolean = true> {
  site_name?: T;
  address?: T;
  google_maps_url?: T;
  waze_url?: T;
  google_embed_url?: T;
  email?: T;
  phone?: T;
  'social-media'?:
    | T
    | {
        icon?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  'contact-us'?:
    | T
    | {
        title?: T;
        office_name_label?: T;
        inquiries_label?: T;
      };
  products?:
    | T
    | {
        'hero-title'?: T;
        'hero-description'?: T;
        all_product?: T;
        completed?: T;
        under_dev?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage_select".
 */
export interface HomepageSelect<T extends boolean = true> {
  'hero-title'?: T;
  'hero-typewriter-text'?:
    | T
    | {
        text?: T;
        id?: T;
      };
  'hero-description'?: T;
  'statistics-section'?:
    | T
    | {
        headline?: T;
        title?: T;
        description?: T;
      };
  'pages-section'?:
    | T
    | {
        list?:
          | T
          | {
              image?: T;
              headline?: T;
              title?: T;
              description?: T;
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                  };
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about-us_select".
 */
export interface AboutUsSelect<T extends boolean = true> {
  'intro-header'?: T;
  'intro-description'?: T;
  'future-header'?: T;
  'future-description'?:
    | T
    | {
        'line-text'?: T;
        id?: T;
      };
  'our-capabilities-title'?: T;
  'our-capabilities'?:
    | T
    | {
        'card-header'?: T;
        icon?: T;
        'card-description'?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navbar_select".
 */
export interface NavbarSelect<T extends boolean = true> {
  'navbar-items'?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  social_label?: T;
  govtech_label?: T;
  govtech_route?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  opensource_label?: T;
  open_source?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  copyright?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}